1. Pasikuriam nauja projekta, prisidedam git ir github
bent vienas modulinis js failas su kazkokiu funkcionalumu + index.js

2. Inicializuoti npm: npm init

3. Instaliuojam webPack: npm install webpack webpack-cli --save-dev  (cli - command line interface)

4. Susikuriam .gitignore faila ir i ji irasom node_module, ir dist kad siu failu gitas nesektu

5. Pridedam webpack konfiguracijos faila: webpack.dev.js
Pakeiciam scripta, kad start script'as paleidzia dev konfiguracija
"start: : "webpack --config  webpack.dev.js"

6. Instaliuojam Html generavimo plugin is webpack: https://webpack.js.org/plugins/html-webpack-plugin/:
npm install --save-dev html-webpack-plugin

Basic Usage: (webpack.dev.js faile) inicijuojam plugina confige ir nurodom jam naudoti musu template.html

const HtmlWebpackPlugin = require('html-webpack-plugin');
const path = require('path');

module.exports = {
  entry: 'index.js',
  output: {
    path: path.resolve(__dirname, './dist'),
    filename: 'index_bundle.js',
  },
  plugins: [new HtmlWebpackPlugin()],
};

susitvarkom output:
output: { filename: "bundle.js", path: path.resolve(__dirname, "dist"), clean: true }


7. CSS  - pluginus instaliuojam: https://webpack.js.org/guides/asset-management/#loading-css
npm install --save-dev style-loader css-loader
prideti taisykle kad css failams naudoti css loader

8.Babel instaliuojam Babel-loader:https://webpack.js.org/loaders/babel-loader/ 

npm install -D babel-loader @babel/core @babel/preset-env

padarom taisykle: (visi js ir mjs failai naudos babel)
module: {
  rules: [
    {
      test: /\.m?js$/,
      exclude: /(node_modules|bower_components)/,
      use: {
        loader: 'babel-loader',
        options: {
          presets: ['@babel/preset-env']
        }
      }
    }
  ]
}

9.  I module.exports = { // irasom devtool:"source-map"
  mode: "development", 
  devtool: "source-map", // galima matyti is kurio failo koks kodas atejo(consol.log'e tarkim, kad nerodytu kad atejo is main js)


Dev server




IMG










2. Paruosimas produkcijai - sugeneruojam optimalius failus sujungiant i viena ir pa.:
komanda: npx webpack --mode production


pasidarem skriptus dev build ir start

norim idiegti html plugin: npm install --save-dev html-webpack-plugin

susikuriam faila webpack.config.js .Cia gules visa webpack konfiguracija

Norim pajungt webpacui html plugina(webpack.config.js faile):
const HtmlWebpackPlugin = require('html-webpack-plugin');
const path = require('path');


// prisideti post css plugin, kad pridetu reikalingus webkit pagal narsykle ir versija:
npm i --save-dev postcss postcss-loader postcss-preset-env

.browserslistrc
last 2 versions // imampaskutines 2 narsykliu versija
> 0.5% // bandom pa;aikyti 99.5% narsykliu
IE9 // bandom prideti palaikyma internet explorer 9 narsykle